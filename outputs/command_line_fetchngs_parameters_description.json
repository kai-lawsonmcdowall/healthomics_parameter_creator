{
    "input": {
        "optional": false,
        "description": "File containing SRA/ENA/GEO/DDBJ identifiers one per line to download their associated metadata and FastQ files."
    },
    "ena_metadata_fields": {
        "optional": true,
        "description": "Comma-separated list of ENA metadata fields to fetch before downloading data."
    },
    "sample_mapping_fields": {
        "optional": true,
        "description": "Comma-separated list of ENA metadata fields used to create a separate 'id_mappings.csv' and 'multiqc_config.yml' with selected fields that can be used to rename samples in general and in MultiQC."
    },
    "nf_core_pipeline": {
        "optional": true,
        "description": "Name of supported nf-core pipeline e.g. 'rnaseq'. A samplesheet for direct use with the pipeline will be created with the appropriate columns."
    },
    "nf_core_rnaseq_strandedness": {
        "optional": true,
        "description": "Value for 'strandedness' entry added to samplesheet created when using '--nf_core_pipeline rnaseq'."
    },
    "download_method": {
        "optional": true,
        "description": "Method to download FastQ files. Available options are 'aspera', 'ftp' or 'sratools'. Default is 'ftp'."
    },
    "skip_fastq_download": {
        "optional": true,
        "description": "Only download metadata for public data database ids and don't download the FastQ files."
    },
    "dbgap_key": {
        "optional": true,
        "description": "dbGaP repository key."
    },
    "outdir": {
        "optional": false,
        "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure."
    },
    "email": {
        "optional": true,
        "description": "Email address for completion summary."
    },
    "custom_config_version": {
        "optional": true,
        "description": "Git commit id for Institutional configs."
    },
    "custom_config_base": {
        "optional": true,
        "description": "Base directory for Institutional configs."
    },
    "config_profile_name": {
        "optional": true,
        "description": "Institutional config name."
    },
    "config_profile_description": {
        "optional": true,
        "description": "Institutional config description."
    },
    "config_profile_contact": {
        "optional": true,
        "description": "Institutional config contact information."
    },
    "config_profile_url": {
        "optional": true,
        "description": "Institutional config URL link."
    },
    "max_cpus": {
        "optional": true,
        "description": "Maximum number of CPUs that can be requested for any single job."
    },
    "max_memory": {
        "optional": true,
        "description": "Maximum amount of memory that can be requested for any single job."
    },
    "max_time": {
        "optional": true,
        "description": "Maximum amount of time that can be requested for any single job."
    },
    "help": {
        "optional": true,
        "description": "Display help text."
    },
    "version": {
        "optional": true,
        "description": "Display version and exit."
    },
    "publish_dir_mode": {
        "optional": true,
        "description": "Method used to save pipeline results to output directory."
    },
    "email_on_fail": {
        "optional": true,
        "description": "Email address for completion summary, only when pipeline fails."
    },
    "plaintext_email": {
        "optional": true,
        "description": "Send plain-text email instead of HTML."
    },
    "monochrome_logs": {
        "optional": true,
        "description": "Do not use coloured log outputs."
    },
    "hook_url": {
        "optional": true,
        "description": "Incoming hook URL for messaging service"
    },
    "validate_params": {
        "optional": true,
        "description": "Boolean whether to validate parameters against the schema at runtime"
    },
    "validationShowHiddenParams": {
        "optional": true,
        "description": "Show all params when using `--help`"
    },
    "validationFailUnrecognisedParams": {
        "optional": true,
        "description": "Validation of parameters fails when an unrecognised parameter is found."
    },
    "validationLenientMode": {
        "optional": true,
        "description": "Validation of parameters in lenient more."
    },
    "force_sratools_download": {
        "optional": "",
        "description": "This parameter has been deprecated. Please use '--download_method sratools' instead."
    }
}